package algorithm;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;


public class Programmers_kakao1 {
	
    public int solution(String s) {
        int answer = s.length();
        int temp = 0;
        
        for(int i = 1 ;i< s.length()/2;i++ ) {//i개로 자르기 최대가 반으로 자르기
        	//1개로 자르기
        	temp = 0;
        	for(int j = 0;j < s.length();j = j + i) {//aabbaccc 
        		//1개로 짜르기
        		int temp2 = 0;
        		for(int k = j+i ;k <s.length();k= k+i) {// aa비교 bb비교 cc비교 
        			if(s.substring(k, k+i).equals(s.substring(j, j+i))) {//aa한개씩 일때 a , a   aabb 일 때 aa bb  
        				temp2++;
        				if(k == s.length()-i) {//마지막 일 때
        					if(temp2 >1)
        						temp = temp + 2;//aaa --> 3a 라서 2를 더해준다.
        					else
        						temp = temp + i;//a한개 일때   cc두개 일 때  temp + 2 
        					j = s.length()-i;//종료 조건 이거 쓰면 종료된다.
                    		System.out.println(" i is " + i +" " +" j is  " + j +" k is : "+ k + " temp* is "+temp);
        					break;
        				}
        			}else {//aab 에서 b일 때 주체를 j를 b로 바꾼다. 
        				//이미 있던 aa는 더해준다. 
    					if(temp2 >1)
    						temp = temp + 2;//aa --> 2a 라서 2를 더해준다.
    					else//temp2 == 0
    						temp = temp + i;
    					//ab고 a 한개 니까 1 더해준다. aabb일 때는 a와b가 같지 않다. 따라서 aabb a에서 b로 넘어가지 2를 더해
        				j = k-i; //왜냐면 j for문에서 j를 i만큼 더하니까 미리 뺐다.
                		System.out.println(" i is " + i +" " +" j is  " + j +" k is : "+ k + " temp** is "+temp);
        				break;
        			}
        		}
        		
        		if(answer > temp && j == s.length() - i) {
        			System.out.println(temp + " i is" + i);
        			answer = temp;
        		
        		}
        	}
        }
        return answer;
    }
	public static void main(String[] args) throws Exception {
		Programmers_kakao1 a = new Programmers_kakao1();
		System.out.println(a.solution("aabbaccc"));
	}//end of main
}
