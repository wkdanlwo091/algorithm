package algorithm;

import java.util.*;

public class Katalk_2 {

	
	
	public String flip(String p) {
		String temp = "";
		
		for(int i =0  ;i < p.length(); i++) {
			if(p.charAt(i))
		}
		
	}
	// divide and conquer;
	public String divCon(int index, String p) {
		
		Stack<Character> stack = new Stack();
		int left = 0;
		int right = 0;
		int end = 0;
		String answer = "";
		
		//u가 균형인지 올바른인지 체크
		for (int i = index; i < p.length(); i++) {
			if (p.charAt(i) == ')') {
				if(stack.size() != 0 && stack.peek() == '(')
					stack.pop();
				left++;
			} else if (p.charAt(i) == '(') {
				stack.push('('); 
				right++;
			}
			if(left == right) {
				end = i;
				
				if(stack.size() == 0) {//올바른 문자열
					if(index == p.length()-1) {
						return p;//전체가 올바른 문자열
					}else {//u가 올바른이면 v부터 다시 시작
						answer += p.substring(index, end+1);
						return answer + divCon(end,p.substring(end, p.length()));
					}
				}else {//균형잡힌 문자열 
					stack.clear();
					
					break;
				}

			}
		}

		//                                                                  index 처음 제외 ,마지막 제외 
		return '(' + divCon(end,p.substring(end, p.length())) + ')' + p.substring(index+1, end);
	}

	public String solution(String p) {
		String answer = "";

		if (p.equals("")) {
			return p;
		}

		
		divCon(0, p);
		

		return answer;
	}

	public static void main(String[] args) {
		Katalk_2 katalk_2 = new Katalk_2();
		katalk_2.solution("(()())()");
	}
}
