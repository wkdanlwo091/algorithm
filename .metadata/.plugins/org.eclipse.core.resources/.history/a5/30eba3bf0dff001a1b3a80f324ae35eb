package algorithm;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

import algorithm.Katalk2.Person;

public class BOJ_11650 {
	static class Person implements Comparable{
		String letters;
		int times;
		
		public Person(String letters, int times) {
			super();
			this.letters = letters;
			this.times = times;
		}

		public String getLetters() {
			return letters;
		}

		public void setLetters(String letters) {
			this.letters = letters;
		}

		public int getTimes() {
			return times;
		}

		public void setTimes(int times) {
			this.times = times;
		}

		@Override
		public int compareTo(Object o) {
			
	        int compareNum=((Person)o).getTimes();
	        
	        //desceding order
	        return compareNum - this.times;
		}
	}

	static class Position implements Comparable{
		
		int x, y;
		
		public Position(int x, int y){
			this.x = x;
			this.y = y;
		}
		
		@Override
		public int compareTo(Object o) {
			int r = x - ((Position)o).x;
			if(r == 0) {
				r = y-o.y;
			}
			return r;
		}
	}
	public static void main(String[] args) {
		int N, x, y;
		ArrayList<Point> arr = new ArrayList<>();
		ArrayList<Person> arr2 = new ArrayList<>();
		Scanner scan = new Scanner(System.in);
		N = scan.nextInt();
		for(int i =0 ;i < N;i++) {
			x = scan.nextInt();
			y = scan.nextInt();
			arr.add(new Point(x,y));
			arr2.add(new Person("dd",1));
		}
		Collections.sort(arr);
		Collections.sort(arr2);
	}
}
