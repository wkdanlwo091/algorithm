package algorithm;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Deque;
import java.util.LinkedList;
public class BOJ_18258 {
	static int N;
	static String st;
	static int num;
	public static void main(String[] args) {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		Deque<Integer> q = new LinkedList<>();
		StringTokenizer st;

		N = scan.nextInt();
		for(int i= 0;i< N;i++) {
			st = scan.next();
			if(st.equals("push")) {
				num = scan.nextInt();
				q.addFirst(num);
			}else if(st.equals("front")) {
				if(q.size() != 0) {
					System.out.println(q.peekLast());
				}
				else {
					System.out.println("-1");
				}
			}else if(st.equals("back")) {
				if(q.size() != 0)
					System.out.println(q.peekFirst());
				else {
					System.out.println("-1");
				}
			}else if(st.equals("size")) {
				System.out.println(q.size());
			}else if(st.equals("empty")) {
				if(q.isEmpty()) {
					System.out.println("1");
				}else {
					System.out.println("0");
				}
			}else if(st.equals("pop")) {
				if(q.isEmpty()) {
					System.out.println("-1");
				}else
					System.out.println(q.pollLast());
			}
		}
	}
}
