package algorithm;

import java.util.ArrayList;
import java.util.Scanner;

public class BOJ_2580 {
	
	static int map[][];
	static int cnt = 0;
	
	static class Point{
		int y;
		int x;
		Point(int y, int x){
			this.y = y;
			this.x = x;
		}
	}
	
	
	static int xCheck(int x) {// 3*3범위에서 x를 북서 끝으로
		if( 1 <= x && x <= 3) {
			return 1;
		}else if(x>=4 && x<= 6) {
			return 4;
		}else if(x >= 7 && x <= 9) {
			return 7;
		}
		return 0;

	}
	static int yCheck(int y) {
		if( 1 <= y && y <= 3) {
			return 1;
		}else if(y>=4 && y<= 6) {
			return 4;
		}else if(y >= 7 && y <= 9) {
			return 7;
		}
		return 0;
	}
	
	static void dfs(int index, int y, int x) {
		
		if(index == cnt) {
			return;
		}
		
		//가로 검사
		int arr[ ] = new int[10];
		for(int i = 1;i <= 9;i++) {
			if(map[y][i] != 0 ) {
				arr[map[y][i]]++;
			}
		}

		//세로 검사
		for(int i = 0;i <= 9;i++) {
			if(map[i][x] != 0 ) {
				arr[map[i][x]]++;
			}
		}

		
		
		//3*3에서 x, y 검사
		int yStart;
		int xStart;
		yStart = yCheck(y);
		xStart = yCheck(x);
		
		for(int i = yStart;i < yStart+3;i++) {
			for(int j = xStart;j < xStart+3;j++) {
				if(map[i][j] != 0) {
					arr[map[i][j]]++;
				}
			}
		}
		
		for(int i= 1;i<=10;i++) {
			if(arr[i] == 0) {
				map[y][x] = i;
				dfs(index+1, );
			}
		}
		
	}
	
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		map = new int[10][10];
		ArrayList<Point> arr= new ArrayList<>();
		
		int y = -1, x = -1;
		for(int i = 1 ;i <= 9;i++) {
			for(int j =1 ;j <= 9;j++) {
				map[i][j] = scan.nextInt();
				if(map[i][j] == 0) {
					cnt++;	
					arr.add(new Point(i, j));//0인 지점 저장
				}
			}
		}
		
		
		//0인 지점 넣기 
		dfs(0,arr.get(0).y, arr.get(0).x);
	}
}
