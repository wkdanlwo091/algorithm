package algorithm;

import java.util.Scanner;

public class BOJ_14889 {
	static int arr[];//start
	static int arr2[];//link
	static int visit[];
	static int N;
	static int map[][];

	static void dfs(int cnt, int curr) {
		
		if (cnt == N/2) {
//			for(int i = 0 ; i< N/2;i++) {
//				System.out.print(arr[i] + " ");
//			}
//			System.out.println();
			
			int k = 0;
			for(int i = 0;i < N;i++)  
				if(arr[i] == 0)  
					arr[k++] = i+1;
			
			
			
			return;
		}
		
		for (int i = 0; i < N; i++) {
			if (visit[i] == 0 && curr < i+1) {
				visit[i] = 1;
				arr[cnt] = i+1;	
				dfs(cnt + 1, arr[cnt]);
				visit[i] = 0;
			}
		}
		
	}

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);

		N = scan.nextInt();
		visit = new int[N];
		arr = new int[N];
		map = new int[N][N];
		
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < N; j++) {
				map[i][j] = scan.nextInt();
			}
		}
		
		dfs(0,0);
	}
}
