package algorithm;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class BOJ_2108 {
	
	static class Common implements Comparable<Common>{
		int num;
		int cnt;
		
		Common(int num, int cnt){
			this.num = num;
			this.cnt = cnt;
		}

		public int getNum() {
			return num;
		}

		public void setNum(int num) {
			this.num = num;
		}

		public int getCnt() {
			return cnt;
		}

		public void setCnt(int cnt) {
			this.cnt = cnt;
		}

		@Override
		public int compareTo(Common arg0) {//cnt기준으로 내림차순
			int r = -(cnt - arg0.cnt);//cnt순으로 내림차순으로 만들고 
			
			if(r == 0) {//cnt가 같을때는 숫자 크기로 오름차순
				r = num - arg0.num;
			}
			
			return r;
		}
		
	}
	
	public static void main(String[] args) {
		int N;
		Scanner scan = new Scanner(System.in);
		ArrayList<Integer> a = new ArrayList<>();
		Common [] num = new Common[8002];
		
		N = scan.nextInt();
		int temp;
		int sum = 0;
		
		for(int i= 0 ;i < N;i++) {
			temp = scan.nextInt();
			
			if(temp > 0) {
				if(num[temp*2] == null) {
					num[temp*2] = new Common(temp, 1);
				}else {
					num[temp*2].setCnt(num[temp].getCnt()+1);
				}
			}else if(temp <0) {
				int abs = Math.abs(temp);
				
				if(num[temp] == null) {
					num[temp] = new Common(temp, 1);
				}else {
					num[temp].setCnt(num[temp].getCnt()+1);
				}

				
			}
			a.add(temp);
			sum += temp;
			
		}
		
		Collections.sort(a);
		Arrays.parallelSort(num);//오름차순 by 빈도 수 for 최빈값
		
		int mc = num[0].getCnt();
		int last = 0;
		for(int i =1;i<num.length;i++) {
			if(mc == num[i].getCnt()) {
				last = i;
			}else {
				break;
			}
		}
		
		System.out.println(Math.round(sum/N*10)/10);//소수점 첫째자리에서 반올림한 수
		System.out.println(a.get(N/2));//중앙값
	
		if(last== 0) {//최빈값이 유일하다면 유일 한 것 출력
			System.out.println(num[last].getNum());
		}else {
			System.out.println(num[last-1].getNum());//최빈 값이 유일하지 않다면 두번째로 작은 
		}
		
		System.out.println(a.get(a.size()-1) -a.get(0));
	}

}
